@import "syntax-variables";

.atom-text-editor, // <- remove when Shadow DOM can't be disabled
atom-text-editor {
  background-color: @syntax-background-color;
  color: @syntax-text-color;

  .syntax--wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .syntax--indent-guide {
    color: @syntax-indent-guide-color;
  }

  .syntax--invisible-character {
    color: @syntax-invisible-character-color;
  }

  .syntax--gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;

    .syntax--line-number {
      &.syntax--cursor-line {
        background-color: @syntax-gutter-background-color-selected;
        color: @syntax-gutter-text-color-selected;
      }

      &.syntax--cursor-line-no-selection {
        color: @syntax-gutter-text-color-selected;
      }
    }
  }

  .syntax--gutter .syntax--line-number.syntax--folded,
  .syntax--gutter .syntax--line-number:after,
  .syntax--fold-marker:after {
    color: @oc-gray-6;
  }

  .syntax--invisible {
    color: @syntax-text-color;
  }

  .syntax--cursor {
    color: @syntax-cursor-color;
  }

  .selection .region {
    background-color: @syntax-selection-color;
  }
}

.atom-text-editor .search-results .syntax--marker .region {
  background-color: transparent;
  border: 1px solid @syntax-result-marker-color;
}

.atom-text-editor .search-results .syntax--marker.current-result .region {
  border: 1px solid @syntax-result-marker-color-selected;
}

.syntax--comment {
  color: @comment;
}

.syntax--keyword {
  color: @keyword;

  &.syntax--control {
    color: @keyword;
  }

  &.syntax--operator {
    color: @operator;
  }

  &.syntax--other.syntax--special-method {
    color: @oc-blue-2;
  }

  &.syntax--other.syntax--unit {
    color: @oc-orange-4;
  }
}

.syntax--storage {
  color: @storage;

	// const, let, etc.
  &.syntax--type {
    color: @type;
  }
}

.syntax--constant {
  color: @constant;

  &.syntax--character.syntax--escape {
    color: lighten(@string, 20%);
  }

  &.syntax--other.syntax--placeholder {
    color: @string;
  }

  &.syntax--numeric {
    color: @number;
  }

  &.syntax--other.syntax--color {
    color: @oc-cyan-3;
  }

  &.syntax--other.syntax--symbol {
    color: @oc-lime-3;
  }

  &.syntax--language {
    color: @keyword;
  }
}

.syntax--variable {
  color: @variable;

  &.syntax--interpolation {
    color: darken(@variable, 10%);
  }

  &.syntax--parameter.syntax--function {
    color: @syntax-text-color;
  }

  &.syntax--other.syntax--dot-access {
    color: @text;
  }
}

.syntax--invalid.syntax--illegal {
  background-color: @oc-red-5;
  color: @syntax-background-color;
}

.syntax--string {
  color: @string;


  &.syntax--regexp {
    color: @oc-cyan-3;

    .syntax--source.syntax--ruby.syntax--embedded {
      color: @oc-orange-4;
    }
  }

  &.syntax--other.syntax--link {
    color: @oc-red-5;
  }
}

.syntax--punctuation {
  &.syntax--definition {
    &.syntax--comment {
      color: @comment;
    }

    &.syntax--string {
      color: @string;
    }

    &.syntax--variable {
      color: @variable;
    }

    &.syntax--parameters,
    &.syntax--array {
      color: @syntax-text-color;
    }

    &.syntax--heading,
    &.syntax--identity {
      color: @oc-blue-2;
    }

    &.syntax--bold {
      color: @oc-orange-3;
      font-style: bold;
    }

    &.syntax--italic {
      color: @oc-violet-1;
      font-style: italic;
    }
  }

  &.syntax--section.syntax--embedded {
    color: @section;
  }

}

.syntax--support {
  &.syntax--class {
    color: @text;
  }

  &.syntax--function  {
    color: @keyword;

    &.syntax--any-method {
      color: @text;
    }
  }

  &.syntax--type {
		// console
    color: @type;
  }
}

.syntax--entity {
  &.syntax--name.syntax--function {
    color: @text;
  }

  &.syntax--name.syntax--class, &.syntax--name.syntax--type.syntax--class {
    color: @text;
  }

  &.syntax--name.syntax--section {
    color: @text;
  }

  &.syntax--name.syntax--tag {
    color: @tag;
    //text-decoration: underline;
  }

	// JSDoc argument type
  &.syntax--name.syntax--type {
    color: @oc-lime-3;
  }

  &.syntax--other.syntax--attribute-name {
    color: @attribute;

    &.syntax--id {
      color: @oc-blue-2;
    }
  }

  &.syntax--other.syntax--inherited-class {
    color: @oc-lime-3;
  }
}

.syntax--meta {
  &.syntax--class {
    color: @text;
  }

  &.syntax--link {
    color: @oc-orange-4;
  }

  &.syntax--require {
    color: @oc-blue-2;
  }

  &.syntax--selector {
    color: @oc-violet-1;
  }

  &.syntax--separator {
    background-color: @oc-gray-7;
    color: @syntax-text-color;
  }

  &.syntax--preprocessor {
    color: @preprocessor;
  }
}

.syntax--none {
  color: @syntax-text-color;
}

.syntax--markup {
  &.syntax--bold {
    color: @oc-orange-4;
    font-style: bold;
  }

  &.syntax--changed {
    color: @oc-violet-1;
  }

  &.syntax--deleted {
    color: @oc-red-5;
  }

  &.syntax--italic {
    color: @oc-violet-1;
    font-style: italic;
  }

  &.syntax--heading .syntax--punctuation.syntax--definition.syntax--heading {
    color: @oc-blue-2;
  }

  &.syntax--inserted {
    color: @oc-lime-3;
  }

  &.syntax--list {
    color: @oc-red-5;
  }

  &.syntax--quote {
    color: @oc-orange-4;
  }

  &.syntax--raw.syntax--inline {
    color: @oc-lime-3;
  }
}

.syntax--source.syntax--gfm .syntax--markup {
  -webkit-font-smoothing: auto;
  &.syntax--heading {
    color: @oc-lime-3;
  }
}

.atom-text-editor[mini] .scroll-view {
  padding-left: 1px;
}
.syntax--meta.syntax--structure.syntax--dictionary.syntax--json {
  color: @oc-blue-2;

  // make all strings
  & > .syntax--string.syntax--quoted.syntax--json {
    color: @syntax-text-color;
  }

  // make an exception for all .string keys whose immediate parent is .value
  & > .syntax--value.syntax--json > .syntax--string.syntax--json {
    color: @oc-orange-4;
  }
}
